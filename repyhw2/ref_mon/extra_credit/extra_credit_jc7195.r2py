"""
This security layer interposes on a textfile 
and gives it open, close, read and write access.
However, a user cannot start the document with the letters,
MZ.
If a user tries to the security layer will raise an exception.
Note:
  This security layer uses encasementlib.r2py, restrictions.default, repy.py and python
  Also you need to give it an application to run.
  This security layer never runs explicitly but instead interposes functions
  from above layers.

"""	

# This is just an example global variable.   It stores a list of the calls the application makes.
BUFFER = []
mutex=createlock()

class SecureFile():
  def __init__(self,privilegedfo):
    self.privilegedfo = privilegedfo

  def readat(self,bytes,offset):
    BUFFER.append("readat")
    return self.privilegedfo.readat(bytes,offset)

  def writeat(self,data,offset):
    BUFFER.append("writeat")
    if offset<6:
      start_num=offset
    else :
      start_num=offset-5

    str1= self.privilegedfo.readat(start_num,0)
    data_len=len(data)
    str2= self.privilegedfo.readat(5,(offset+data_len))
    checkdata=str1+data+str2
    mutex.acquire(True)
    if (data.find("p0wnd")!=-1):	
      raise ValueError()
    elif (checkdata.find("p0wnd")!=-1):
      raise ValueError()
    else:
      BUFFER.append("writeat")
      try:
        mutex.release()
      except LockDoubleReleaseError:
        log()
      finally:
        return self.privilegedfo.writeat(data,offset)
	
  def close(self):
    BUFFER.append("close")
    try:
      mutex.release()
    except LockDoubleReleaseError:
      log()
    finally:
      return self.privilegedfo.close()


def secure_openfile(filename, create):
  BUFFER.append("openfile")
  # Open a file from the layer below (likely the sandbox)
  privilegedfo = openfile(filename,create)
  return SecureFile(privilegedfo)


# You can ignore the code below here.   It just sets of the security layer so that the application calls it instead of
# the original API functions.
TYPE="type"
ARGS="args"
RETURN="return"
EXCP="exceptions"
TARGET="target"
FUNC="func"
OBJC="objc"

sec_file_def = {"obj-type":SecureFile,
    "name":"SecureFile",
    "readat":{TYPE:FUNC,ARGS:((int,long,type(None)),(int,long)),EXCP:Exception,RETURN:str,TARGET:SecureFile.readat},
    "writeat":{TYPE:FUNC,ARGS:(str,(int,long)),EXCP:Exception,RETURN:(None),TARGET:SecureFile.writeat},
    "close":{TYPE:FUNC,ARGS:None,EXCP:None,RETURN:(bool,type(None)),TARGET:SecureFile.close}
}

CHILD_CONTEXT_DEF["openfile"] = {TYPE:OBJC,ARGS:(str,bool),EXCP:Exception,RETURN:sec_file_def,TARGET:secure_openfile}

secure_dispatch_module()

